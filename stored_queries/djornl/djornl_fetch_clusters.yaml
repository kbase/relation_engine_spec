name: djornl_fetch_clusters
description: Fetch all nodes that are members of the specified cluster(s), and the edges and nodes within the specified distance (number of hops) of those nodes.
params:
  type: object
  properties:
    cluster_i2_ids:
      title: Cluster I2 IDs
      description: Cluster I2 IDs to locate
      items: {type: integer}
      default: []
      examples: [[1], [3, 5]]
    cluster_i4_ids:
      title: Cluster I4 IDs
      description: Cluster I4 IDs to locate
      items: {type: integer}
      examples: [[2], [4, 6]]
      default: []
    cluster_i6_ids:
      title: Cluster I6 IDs
      description: Cluster I6 IDs to locate
      items: {type: integer}
      examples: [[666], [999, 333]]
      default: []
    distance:
      type: integer
      title: Traversal Distance
      description: How many hops to find neighbors and neighbors-of-neighbors
      default: 1
      minimum: 0
      maximum: 100
query: |
  LET node_ids = (
    FOR n IN djornl_node
      FILTER n.cluster_I2 IN @cluster_i2_ids OR n.cluster_I4 IN @cluster_i4_ids OR n.cluster_I6 IN @cluster_i6_ids
      FOR node IN 0..@distance ANY n djornl_edge
        OPTIONS {bfs: true, uniqueVertices: "global"}
        RETURN DISTINCT node._id
  )
  LET edges = (
    FOR edge IN djornl_edge
      FILTER edge._from IN node_ids AND edge._to IN node_ids
      RETURN edge
  )
  LET nodes = (
    FOR node IN djornl_node
        FILTER node._id IN node_ids
        RETURN node
  )
  RETURN {nodes, edges}
